/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.techsocialist.servicebuilder.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;

import com.techsocialist.servicebuilder.model.ProductionHouseRegisterEntry;
import com.techsocialist.servicebuilder.model.ProductionHouseRegisterEntryModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ProductionHouseRegisterEntry service. Represents a row in the &quot;production_house_register&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ProductionHouseRegisterEntryModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProductionHouseRegisterEntryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProductionHouseRegisterEntryImpl
 * @generated
 */
public class ProductionHouseRegisterEntryModelImpl
	extends BaseModelImpl<ProductionHouseRegisterEntry>
	implements ProductionHouseRegisterEntryModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a production house register entry model instance should use the <code>ProductionHouseRegisterEntry</code> interface instead.
	 */
	public static final String TABLE_NAME = "production_house_register";

	public static final Object[][] TABLE_COLUMNS = {
		{"id_", Types.BIGINT}, {"name", Types.VARCHAR}, {"cin", Types.VARCHAR},
		{"landline", Types.VARCHAR}, {"websiteUrl", Types.VARCHAR},
		{"addressLine1", Types.VARCHAR}, {"addressLine2", Types.VARCHAR},
		{"addressLine3", Types.VARCHAR}, {"place", Types.VARCHAR},
		{"state_", Types.VARCHAR}, {"country", Types.VARCHAR},
		{"pincode", Types.VARCHAR}, {"status", Types.VARCHAR},
		{"contactPersonFirstName", Types.VARCHAR},
		{"contactPersonLastNameName", Types.VARCHAR},
		{"contactPersonMobile", Types.VARCHAR},
		{"contactPersonEmail", Types.VARCHAR}, {"userName", Types.VARCHAR},
		{"password_", Types.VARCHAR}, {"createdBy", Types.VARCHAR},
		{"modifiedBy", Types.VARCHAR}, {"createdDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cin", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("landline", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("websiteUrl", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addressLine1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addressLine2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("addressLine3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("place", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("state_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("country", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pincode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonFirstName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonLastNameName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonMobile", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("password_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table production_house_register (id_ LONG not null primary key,name VARCHAR(75) null,cin VARCHAR(75) null,landline VARCHAR(75) null,websiteUrl VARCHAR(75) null,addressLine1 VARCHAR(75) null,addressLine2 VARCHAR(75) null,addressLine3 VARCHAR(75) null,place VARCHAR(75) null,state_ VARCHAR(75) null,country VARCHAR(75) null,pincode VARCHAR(75) null,status VARCHAR(75) null,contactPersonFirstName VARCHAR(75) null,contactPersonLastNameName VARCHAR(75) null,contactPersonMobile VARCHAR(75) null,contactPersonEmail VARCHAR(75) null,userName VARCHAR(75) null,password_ VARCHAR(75) null,createdBy VARCHAR(75) null,modifiedBy VARCHAR(75) null,createdDate DATE null,modifiedDate DATE null)";

	public static final String TABLE_SQL_DROP =
		"drop table production_house_register";

	public static final String ORDER_BY_JPQL =
		" ORDER BY productionHouseRegisterEntry.id ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY production_house_register.id_ ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
		_entityCacheEnabled = entityCacheEnabled;
	}

	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
		_finderCacheEnabled = finderCacheEnabled;
	}

	public ProductionHouseRegisterEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ProductionHouseRegisterEntry.class;
	}

	@Override
	public String getModelClassName() {
		return ProductionHouseRegisterEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ProductionHouseRegisterEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ProductionHouseRegisterEntry, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProductionHouseRegisterEntry, Object>
				attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply(
					(ProductionHouseRegisterEntry)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ProductionHouseRegisterEntry, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ProductionHouseRegisterEntry, Object>
				attributeSetterBiConsumer = attributeSetterBiConsumers.get(
					attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ProductionHouseRegisterEntry)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ProductionHouseRegisterEntry, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ProductionHouseRegisterEntry, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ProductionHouseRegisterEntry>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ProductionHouseRegisterEntry.class.getClassLoader(),
			ProductionHouseRegisterEntry.class, ModelWrapper.class);

		try {
			Constructor<ProductionHouseRegisterEntry> constructor =
				(Constructor<ProductionHouseRegisterEntry>)
					proxyClass.getConstructor(InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map
		<String, Function<ProductionHouseRegisterEntry, Object>>
			_attributeGetterFunctions;
	private static final Map
		<String, BiConsumer<ProductionHouseRegisterEntry, Object>>
			_attributeSetterBiConsumers;

	static {
		Map<String, Function<ProductionHouseRegisterEntry, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<ProductionHouseRegisterEntry, Object>>();
		Map<String, BiConsumer<ProductionHouseRegisterEntry, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap
					<String, BiConsumer<ProductionHouseRegisterEntry, ?>>();

		attributeGetterFunctions.put("id", ProductionHouseRegisterEntry::getId);
		attributeSetterBiConsumers.put(
			"id",
			(BiConsumer<ProductionHouseRegisterEntry, Long>)
				ProductionHouseRegisterEntry::setId);
		attributeGetterFunctions.put(
			"name", ProductionHouseRegisterEntry::getName);
		attributeSetterBiConsumers.put(
			"name",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setName);
		attributeGetterFunctions.put(
			"cin", ProductionHouseRegisterEntry::getCin);
		attributeSetterBiConsumers.put(
			"cin",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setCin);
		attributeGetterFunctions.put(
			"landline", ProductionHouseRegisterEntry::getLandline);
		attributeSetterBiConsumers.put(
			"landline",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setLandline);
		attributeGetterFunctions.put(
			"websiteUrl", ProductionHouseRegisterEntry::getWebsiteUrl);
		attributeSetterBiConsumers.put(
			"websiteUrl",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setWebsiteUrl);
		attributeGetterFunctions.put(
			"addressLine1", ProductionHouseRegisterEntry::getAddressLine1);
		attributeSetterBiConsumers.put(
			"addressLine1",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setAddressLine1);
		attributeGetterFunctions.put(
			"addressLine2", ProductionHouseRegisterEntry::getAddressLine2);
		attributeSetterBiConsumers.put(
			"addressLine2",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setAddressLine2);
		attributeGetterFunctions.put(
			"addressLine3", ProductionHouseRegisterEntry::getAddressLine3);
		attributeSetterBiConsumers.put(
			"addressLine3",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setAddressLine3);
		attributeGetterFunctions.put(
			"place", ProductionHouseRegisterEntry::getPlace);
		attributeSetterBiConsumers.put(
			"place",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setPlace);
		attributeGetterFunctions.put(
			"state", ProductionHouseRegisterEntry::getState);
		attributeSetterBiConsumers.put(
			"state",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setState);
		attributeGetterFunctions.put(
			"country", ProductionHouseRegisterEntry::getCountry);
		attributeSetterBiConsumers.put(
			"country",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setCountry);
		attributeGetterFunctions.put(
			"pincode", ProductionHouseRegisterEntry::getPincode);
		attributeSetterBiConsumers.put(
			"pincode",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setPincode);
		attributeGetterFunctions.put(
			"status", ProductionHouseRegisterEntry::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setStatus);
		attributeGetterFunctions.put(
			"contactPersonFirstName",
			ProductionHouseRegisterEntry::getContactPersonFirstName);
		attributeSetterBiConsumers.put(
			"contactPersonFirstName",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setContactPersonFirstName);
		attributeGetterFunctions.put(
			"contactPersonLastNameName",
			ProductionHouseRegisterEntry::getContactPersonLastNameName);
		attributeSetterBiConsumers.put(
			"contactPersonLastNameName",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setContactPersonLastNameName);
		attributeGetterFunctions.put(
			"contactPersonMobile",
			ProductionHouseRegisterEntry::getContactPersonMobile);
		attributeSetterBiConsumers.put(
			"contactPersonMobile",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setContactPersonMobile);
		attributeGetterFunctions.put(
			"contactPersonEmail",
			ProductionHouseRegisterEntry::getContactPersonEmail);
		attributeSetterBiConsumers.put(
			"contactPersonEmail",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setContactPersonEmail);
		attributeGetterFunctions.put(
			"userName", ProductionHouseRegisterEntry::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setUserName);
		attributeGetterFunctions.put(
			"password", ProductionHouseRegisterEntry::getPassword);
		attributeSetterBiConsumers.put(
			"password",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setPassword);
		attributeGetterFunctions.put(
			"createdBy", ProductionHouseRegisterEntry::getCreatedBy);
		attributeSetterBiConsumers.put(
			"createdBy",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setCreatedBy);
		attributeGetterFunctions.put(
			"modifiedBy", ProductionHouseRegisterEntry::getModifiedBy);
		attributeSetterBiConsumers.put(
			"modifiedBy",
			(BiConsumer<ProductionHouseRegisterEntry, String>)
				ProductionHouseRegisterEntry::setModifiedBy);
		attributeGetterFunctions.put(
			"createdDate", ProductionHouseRegisterEntry::getCreatedDate);
		attributeSetterBiConsumers.put(
			"createdDate",
			(BiConsumer<ProductionHouseRegisterEntry, Date>)
				ProductionHouseRegisterEntry::setCreatedDate);
		attributeGetterFunctions.put(
			"modifiedDate", ProductionHouseRegisterEntry::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<ProductionHouseRegisterEntry, Date>)
				ProductionHouseRegisterEntry::setModifiedDate);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return "";
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getCin() {
		if (_cin == null) {
			return "";
		}
		else {
			return _cin;
		}
	}

	@Override
	public void setCin(String cin) {
		_cin = cin;
	}

	@Override
	public String getLandline() {
		if (_landline == null) {
			return "";
		}
		else {
			return _landline;
		}
	}

	@Override
	public void setLandline(String landline) {
		_landline = landline;
	}

	@Override
	public String getWebsiteUrl() {
		if (_websiteUrl == null) {
			return "";
		}
		else {
			return _websiteUrl;
		}
	}

	@Override
	public void setWebsiteUrl(String websiteUrl) {
		_websiteUrl = websiteUrl;
	}

	@Override
	public String getAddressLine1() {
		if (_addressLine1 == null) {
			return "";
		}
		else {
			return _addressLine1;
		}
	}

	@Override
	public void setAddressLine1(String addressLine1) {
		_addressLine1 = addressLine1;
	}

	@Override
	public String getAddressLine2() {
		if (_addressLine2 == null) {
			return "";
		}
		else {
			return _addressLine2;
		}
	}

	@Override
	public void setAddressLine2(String addressLine2) {
		_addressLine2 = addressLine2;
	}

	@Override
	public String getAddressLine3() {
		if (_addressLine3 == null) {
			return "";
		}
		else {
			return _addressLine3;
		}
	}

	@Override
	public void setAddressLine3(String addressLine3) {
		_addressLine3 = addressLine3;
	}

	@Override
	public String getPlace() {
		if (_place == null) {
			return "";
		}
		else {
			return _place;
		}
	}

	@Override
	public void setPlace(String place) {
		_place = place;
	}

	@Override
	public String getState() {
		if (_state == null) {
			return "";
		}
		else {
			return _state;
		}
	}

	@Override
	public void setState(String state) {
		_state = state;
	}

	@Override
	public String getCountry() {
		if (_country == null) {
			return "";
		}
		else {
			return _country;
		}
	}

	@Override
	public void setCountry(String country) {
		_country = country;
	}

	@Override
	public String getPincode() {
		if (_pincode == null) {
			return "";
		}
		else {
			return _pincode;
		}
	}

	@Override
	public void setPincode(String pincode) {
		_pincode = pincode;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return "";
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@Override
	public String getContactPersonFirstName() {
		if (_contactPersonFirstName == null) {
			return "";
		}
		else {
			return _contactPersonFirstName;
		}
	}

	@Override
	public void setContactPersonFirstName(String contactPersonFirstName) {
		_contactPersonFirstName = contactPersonFirstName;
	}

	@Override
	public String getContactPersonLastNameName() {
		if (_contactPersonLastNameName == null) {
			return "";
		}
		else {
			return _contactPersonLastNameName;
		}
	}

	@Override
	public void setContactPersonLastNameName(String contactPersonLastNameName) {
		_contactPersonLastNameName = contactPersonLastNameName;
	}

	@Override
	public String getContactPersonMobile() {
		if (_contactPersonMobile == null) {
			return "";
		}
		else {
			return _contactPersonMobile;
		}
	}

	@Override
	public void setContactPersonMobile(String contactPersonMobile) {
		_contactPersonMobile = contactPersonMobile;
	}

	@Override
	public String getContactPersonEmail() {
		if (_contactPersonEmail == null) {
			return "";
		}
		else {
			return _contactPersonEmail;
		}
	}

	@Override
	public void setContactPersonEmail(String contactPersonEmail) {
		_contactPersonEmail = contactPersonEmail;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public String getPassword() {
		if (_password == null) {
			return "";
		}
		else {
			return _password;
		}
	}

	@Override
	public void setPassword(String password) {
		_password = password;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return "";
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return "";
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, ProductionHouseRegisterEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProductionHouseRegisterEntry toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ProductionHouseRegisterEntry>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProductionHouseRegisterEntryImpl productionHouseRegisterEntryImpl =
			new ProductionHouseRegisterEntryImpl();

		productionHouseRegisterEntryImpl.setId(getId());
		productionHouseRegisterEntryImpl.setName(getName());
		productionHouseRegisterEntryImpl.setCin(getCin());
		productionHouseRegisterEntryImpl.setLandline(getLandline());
		productionHouseRegisterEntryImpl.setWebsiteUrl(getWebsiteUrl());
		productionHouseRegisterEntryImpl.setAddressLine1(getAddressLine1());
		productionHouseRegisterEntryImpl.setAddressLine2(getAddressLine2());
		productionHouseRegisterEntryImpl.setAddressLine3(getAddressLine3());
		productionHouseRegisterEntryImpl.setPlace(getPlace());
		productionHouseRegisterEntryImpl.setState(getState());
		productionHouseRegisterEntryImpl.setCountry(getCountry());
		productionHouseRegisterEntryImpl.setPincode(getPincode());
		productionHouseRegisterEntryImpl.setStatus(getStatus());
		productionHouseRegisterEntryImpl.setContactPersonFirstName(
			getContactPersonFirstName());
		productionHouseRegisterEntryImpl.setContactPersonLastNameName(
			getContactPersonLastNameName());
		productionHouseRegisterEntryImpl.setContactPersonMobile(
			getContactPersonMobile());
		productionHouseRegisterEntryImpl.setContactPersonEmail(
			getContactPersonEmail());
		productionHouseRegisterEntryImpl.setUserName(getUserName());
		productionHouseRegisterEntryImpl.setPassword(getPassword());
		productionHouseRegisterEntryImpl.setCreatedBy(getCreatedBy());
		productionHouseRegisterEntryImpl.setModifiedBy(getModifiedBy());
		productionHouseRegisterEntryImpl.setCreatedDate(getCreatedDate());
		productionHouseRegisterEntryImpl.setModifiedDate(getModifiedDate());

		productionHouseRegisterEntryImpl.resetOriginalValues();

		return productionHouseRegisterEntryImpl;
	}

	@Override
	public int compareTo(
		ProductionHouseRegisterEntry productionHouseRegisterEntry) {

		long primaryKey = productionHouseRegisterEntry.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ProductionHouseRegisterEntry)) {
			return false;
		}

		ProductionHouseRegisterEntry productionHouseRegisterEntry =
			(ProductionHouseRegisterEntry)obj;

		long primaryKey = productionHouseRegisterEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return _entityCacheEnabled;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return _finderCacheEnabled;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ProductionHouseRegisterEntry> toCacheModel() {
		ProductionHouseRegisterEntryCacheModel
			productionHouseRegisterEntryCacheModel =
				new ProductionHouseRegisterEntryCacheModel();

		productionHouseRegisterEntryCacheModel.id = getId();

		productionHouseRegisterEntryCacheModel.name = getName();

		String name = productionHouseRegisterEntryCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			productionHouseRegisterEntryCacheModel.name = null;
		}

		productionHouseRegisterEntryCacheModel.cin = getCin();

		String cin = productionHouseRegisterEntryCacheModel.cin;

		if ((cin != null) && (cin.length() == 0)) {
			productionHouseRegisterEntryCacheModel.cin = null;
		}

		productionHouseRegisterEntryCacheModel.landline = getLandline();

		String landline = productionHouseRegisterEntryCacheModel.landline;

		if ((landline != null) && (landline.length() == 0)) {
			productionHouseRegisterEntryCacheModel.landline = null;
		}

		productionHouseRegisterEntryCacheModel.websiteUrl = getWebsiteUrl();

		String websiteUrl = productionHouseRegisterEntryCacheModel.websiteUrl;

		if ((websiteUrl != null) && (websiteUrl.length() == 0)) {
			productionHouseRegisterEntryCacheModel.websiteUrl = null;
		}

		productionHouseRegisterEntryCacheModel.addressLine1 = getAddressLine1();

		String addressLine1 =
			productionHouseRegisterEntryCacheModel.addressLine1;

		if ((addressLine1 != null) && (addressLine1.length() == 0)) {
			productionHouseRegisterEntryCacheModel.addressLine1 = null;
		}

		productionHouseRegisterEntryCacheModel.addressLine2 = getAddressLine2();

		String addressLine2 =
			productionHouseRegisterEntryCacheModel.addressLine2;

		if ((addressLine2 != null) && (addressLine2.length() == 0)) {
			productionHouseRegisterEntryCacheModel.addressLine2 = null;
		}

		productionHouseRegisterEntryCacheModel.addressLine3 = getAddressLine3();

		String addressLine3 =
			productionHouseRegisterEntryCacheModel.addressLine3;

		if ((addressLine3 != null) && (addressLine3.length() == 0)) {
			productionHouseRegisterEntryCacheModel.addressLine3 = null;
		}

		productionHouseRegisterEntryCacheModel.place = getPlace();

		String place = productionHouseRegisterEntryCacheModel.place;

		if ((place != null) && (place.length() == 0)) {
			productionHouseRegisterEntryCacheModel.place = null;
		}

		productionHouseRegisterEntryCacheModel.state = getState();

		String state = productionHouseRegisterEntryCacheModel.state;

		if ((state != null) && (state.length() == 0)) {
			productionHouseRegisterEntryCacheModel.state = null;
		}

		productionHouseRegisterEntryCacheModel.country = getCountry();

		String country = productionHouseRegisterEntryCacheModel.country;

		if ((country != null) && (country.length() == 0)) {
			productionHouseRegisterEntryCacheModel.country = null;
		}

		productionHouseRegisterEntryCacheModel.pincode = getPincode();

		String pincode = productionHouseRegisterEntryCacheModel.pincode;

		if ((pincode != null) && (pincode.length() == 0)) {
			productionHouseRegisterEntryCacheModel.pincode = null;
		}

		productionHouseRegisterEntryCacheModel.status = getStatus();

		String status = productionHouseRegisterEntryCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			productionHouseRegisterEntryCacheModel.status = null;
		}

		productionHouseRegisterEntryCacheModel.contactPersonFirstName =
			getContactPersonFirstName();

		String contactPersonFirstName =
			productionHouseRegisterEntryCacheModel.contactPersonFirstName;

		if ((contactPersonFirstName != null) &&
			(contactPersonFirstName.length() == 0)) {

			productionHouseRegisterEntryCacheModel.contactPersonFirstName =
				null;
		}

		productionHouseRegisterEntryCacheModel.contactPersonLastNameName =
			getContactPersonLastNameName();

		String contactPersonLastNameName =
			productionHouseRegisterEntryCacheModel.contactPersonLastNameName;

		if ((contactPersonLastNameName != null) &&
			(contactPersonLastNameName.length() == 0)) {

			productionHouseRegisterEntryCacheModel.contactPersonLastNameName =
				null;
		}

		productionHouseRegisterEntryCacheModel.contactPersonMobile =
			getContactPersonMobile();

		String contactPersonMobile =
			productionHouseRegisterEntryCacheModel.contactPersonMobile;

		if ((contactPersonMobile != null) &&
			(contactPersonMobile.length() == 0)) {

			productionHouseRegisterEntryCacheModel.contactPersonMobile = null;
		}

		productionHouseRegisterEntryCacheModel.contactPersonEmail =
			getContactPersonEmail();

		String contactPersonEmail =
			productionHouseRegisterEntryCacheModel.contactPersonEmail;

		if ((contactPersonEmail != null) &&
			(contactPersonEmail.length() == 0)) {

			productionHouseRegisterEntryCacheModel.contactPersonEmail = null;
		}

		productionHouseRegisterEntryCacheModel.userName = getUserName();

		String userName = productionHouseRegisterEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			productionHouseRegisterEntryCacheModel.userName = null;
		}

		productionHouseRegisterEntryCacheModel.password = getPassword();

		String password = productionHouseRegisterEntryCacheModel.password;

		if ((password != null) && (password.length() == 0)) {
			productionHouseRegisterEntryCacheModel.password = null;
		}

		productionHouseRegisterEntryCacheModel.createdBy = getCreatedBy();

		String createdBy = productionHouseRegisterEntryCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			productionHouseRegisterEntryCacheModel.createdBy = null;
		}

		productionHouseRegisterEntryCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = productionHouseRegisterEntryCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			productionHouseRegisterEntryCacheModel.modifiedBy = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			productionHouseRegisterEntryCacheModel.createdDate =
				createdDate.getTime();
		}
		else {
			productionHouseRegisterEntryCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			productionHouseRegisterEntryCacheModel.modifiedDate =
				modifiedDate.getTime();
		}
		else {
			productionHouseRegisterEntryCacheModel.modifiedDate =
				Long.MIN_VALUE;
		}

		return productionHouseRegisterEntryCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ProductionHouseRegisterEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ProductionHouseRegisterEntry, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProductionHouseRegisterEntry, Object>
				attributeGetterFunction = entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(
				attributeGetterFunction.apply(
					(ProductionHouseRegisterEntry)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ProductionHouseRegisterEntry, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ProductionHouseRegisterEntry, Object>>
				entry : attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProductionHouseRegisterEntry, Object>
				attributeGetterFunction = entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(
				attributeGetterFunction.apply(
					(ProductionHouseRegisterEntry)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function
			<InvocationHandler, ProductionHouseRegisterEntry>
				_escapedModelProxyProviderFunction =
					_getProxyProviderFunction();

	}

	private static boolean _entityCacheEnabled;
	private static boolean _finderCacheEnabled;

	private long _id;
	private String _name;
	private String _cin;
	private String _landline;
	private String _websiteUrl;
	private String _addressLine1;
	private String _addressLine2;
	private String _addressLine3;
	private String _place;
	private String _state;
	private String _country;
	private String _pincode;
	private String _status;
	private String _contactPersonFirstName;
	private String _contactPersonLastNameName;
	private String _contactPersonMobile;
	private String _contactPersonEmail;
	private String _userName;
	private String _password;
	private String _createdBy;
	private String _modifiedBy;
	private Date _createdDate;
	private Date _modifiedDate;
	private ProductionHouseRegisterEntry _escapedModel;

}